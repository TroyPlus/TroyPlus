@model Troy.Web.Models.ProductGroupViewModels

@Scripts.Render("~/bundles/jqueryval")

<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>


@using (Html.BeginForm("Index", "ProductGroup"))
{

    @Html.ValidationSummary(true)
    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Edit ProductGroup</h4>
            </div>

            <div class="modal-body">

                <div class="form-horizontal">

                    <div class="row">

                        <ul id="edittabs" class="nav nav-pills nav-pills-justified">
                            <li class="active">
                                <a href="#editdefault" data-toggle="tab">General </a>
                            </li>
                        </ul>

                        <div id="editTabContent" class="tab-content">

                            <div class="tab-pane fade in active" id="editdefault">
                                <div class="row">
                                    @Html.HiddenFor(model => model.ProductGroup.Product_Group_Id, new { @class = "form-control control-text" })
                                    @Html.HiddenFor(model => model.ProductGroup.Created_User_Id)
                                    @Html.HiddenFor(model => model.ProductGroup.Created_Branc_Id)
                                    @Html.HiddenFor(model => model.ProductGroup.Created_Dte)
                                    <div class="col-md-6">
                                        <div class="form-horizontal">
                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    ProductGroup Name:
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.ProductGroup.Product_Group_Name, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.ProductGroup.Product_Group_Name)
                                                </div>
                                            </div>
                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    ProductGroup Level:
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.ProductGroup.Level, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.ProductGroup.Level)
                                                </div>
                                            </div>
                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Is Active:
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.RadioButtonFor(model => model.ProductGroup.IsActive, "Y", new { id = "Y" }) YES
                                                    @Html.RadioButtonFor(model => model.ProductGroup.IsActive, "N", new { id = "N" }) NO
                                                    @Html.ValidationMessageFor(model => model.ProductGroup.IsActive)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <input class="btn btn-primary pull-left" type="submit" id="btnSubmit" name="submitButton" value="Update" onclick="return EditSubmit(this);" />
                                    <input type="hidden" id="submitAction" name="submitButton" />
                                    <button class="btn pull-left" data-dismiss="modal">Cancel</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>           
        </div>
    </div>
}

