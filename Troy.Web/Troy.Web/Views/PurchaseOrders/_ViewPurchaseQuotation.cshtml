@model  Troy.Web.Models.PurchaseOrderViewModels

@*@Scripts.Render("~/bundles/script/jqueryval")*@

<script type="text/javascript">
    $(document).ready(function () {
        $('.datePicker').datepicker();

        $("#typeahead").jAutochecklist({
            width: 221
        });
        $("#productTypeahead").jAutochecklist({
            width: 135,
            listMaxHeight: 50
        });

        i = 1;

        //Dynamically add quotation row
        function addRowPurQuo() {
            var date = new Date();
            var strDate = (date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear();

            var selectHtml = CreateSelectPurQuo(i);

            selectHtml += '</select>';



            var html = '<tr>' +
                        '<td style="display:none;"> <input class="form-control control-text" data-val="true" data-val-number="The field IsActive must be a number." data-val-required="The IsActive field is required." id="PurchaseOrderItemsList' + i + '__IsDummy" name="PurchaseOrderItemsList[' + i + '].IsDummy" type="text" value="">  </td>' +
                        '<td width="20%"> ' +
                            selectHtml +
                            '<span class="field-validation-valid" data-valmsg-for="PurchaseOrderItemsList[' + i + '].Product_id" data-valmsg-replace="true"></span>' +
                        '<td>' +
                            '<input class="form-control control-text" data-val="true" data-val-number="The field Required Quantity must be a number." data-val-required="The Required Quantity field is required." id="PurchaseOrderItemsList' + i + 'Quantity" name="PurchaseOrderItemsList[' + i + '].Quantity" onkeyup="OnChangeQuantity(this, ' + i + ');" type="text" value="">' +
                            '<span class="field-validation-valid" data-valmsg-for="PurchaseOrderItemsList[' + i + '].Quantity" data-valmsg-replace="true"></span>' +
                        '</td>' +
                        '<td>' +
                            '<input class="form-control control-text" data-val="true" data-val-number="The field Unit_price must be a number." data-val-required="The Unit_price field is required." id="PurchaseOrderItemsList' + i + 'Unit_price" name="PurchaseOrderItemsList[' + i + '].Unit_price" readonly="True" type="text" value="">' +
                            '<span class="field-validation-valid" data-valmsg-for="PurchaseOrderItemsList[' + i + '].Unit_price" data-valmsg-replace="true"></span>' +
                        '</td>' +
                        '<td>' +
                            '<input class="form-control control-text" data-val="true" data-val-number="The field Discount_percent must be a number." data-val-range="The field Discount% must be between 0 and 100." data-val-range-max="100" data-val-range-min="0"  data-val-required="The Discount_percent field is required." id="PurchaseOrderItemsList' + i + '__Discount_percent" name="PurchaseOrderItemsList[' + i + '].Discount_percent" onkeyup="OnChangeDiscount(this, ' + i + ');" type="text" value="">' +
                            '<span class="field-validation-valid" data-valmsg-for="PurchaseOrderItemsList[' + i + '].Discount_percent" data-valmsg-replace="true"></span>' +
                        '</td>' +
                         '<td>' +
                             selectHtml +
                            '<span class="field-validation-valid" data-valmsg-for="PurchaseOrderItemsList[' + i + '].Vat_Code" data-valmsg-replace="true"></span>' +
                        '</td>' +
                        '<td>' +
                            '<input type="button" class="RetPQBtnPlus btn pull-left" value="+" /> <input style="margin-left:5px;" type="button" class="BtnMinus btn pull-left" value="-" />' +
                        '</td>' +
                        '</tr>'

            $(html).appendTo($("#retPurQuocreateItemTable"))

            i++;

            //$("form").removeData("validator");
            //$("form").removeData("unobtrusiveValidation");
            //$.validator.unobtrusive.parse("form");

            $("form").removeData("validator");
            $("form").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");

            $("#retPurQuocreateItemTable").delegate(".datePicker", "focusin", function () {
                $(this).datepicker();
            });

        }

        function CreateSelectPurQuo(rowID) {

            //debugger;

            var selectHtml = '<select class="form-control control-text valid" data-val="true" data-val-number="The field Product_id must be a number." data-val-required="The Product_id field is required." id="PurchaseOrderItemsList' + rowID + '__Product_id" name="PurchaseOrderItemsList[' + rowID + '].Product_id" onchange="OnChangeProduct(this, ' + rowID + ');">';
            selectHtml += '<option value=""></option>';

            var dataUrl = "/PurchaseOrders/GetProductList";

            $.ajax({
                type: 'GET',
                url: dataUrl,
                async: false,
                cache: false,
                crossDomain: true,
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                error: function (xhr, err) {
                },
                success: function (result, status) {
                    //debugger;
                    for (var count = 0; count < result.length; count++) {
                        selectHtml += '<option value="' + result[count].BP_Id + '">' + result[count].BP_Name + '</option>';
                    }
                }
            });

            return selectHtml;
        }

        $("retPurQuocreateItemTable").on("click", ".RetPQBtnPlus", addRowPurQuo);

        function deleteRow() {

            //debugger;

            if (i == 1) {
                alert("Atleast one item for each product");
            }
            else {

                var par = $(this).parent().parent();
                //par.remove();
                //$('#idEstablishmentRow td.ms-formbody span input').attr('id');

                var id = par[0].childNodes[0].childNodes[1].id;

                id = '#' + id;

                $(id).val("1");

                //par[0].childNodes[0].childNodes[1].value = 1;

                //$(id).val(1);
                par.remove();
                i--;
                CalculateTotal();
            }
        };

        $("retPurQuocreateItemTable").on("click", ".BtnMinus", deleteRow);
    });

    $(function () {
        $("#btnNextTabPurQuo").click(function (e) {
            e.preventDefault();
            var _this = $(this);
            var _form = _this.closest("#default");

            var validator = $("#default").validate(); // obtain validator
            var anyError = false;
            _form.find("input").each(function () {
                debugger;
                if (this.parentNode.parentNode.className != "jAutochecklist_list") {
                    if (!validator.element(this)) { // validate every input element inside this step
                        anyError = true;
                    }
                }
            });

            _form.find("select").each(function () {
                //debugger;
                if (!validator.element(this)) { // validate every input element inside this step
                    anyError = true;
                }
            });

            if (anyError) {
                return false;
            }
            else {
                $('#createtabsPurQuo a[href = #addQuotationlistPurQuo]').tab('show');
            }// exit if any error found

            //$.post(_form.attr("action"), _form.serialize(), function (data) {
            //    //check the result and do whatever you want
            //    $('#createtabs a[href = #addQuotationlist]').tab('show');
            //})


            //$("#default").validate({
            //    showErrors: function (errorMap, errorList) {
            //        debugger;
            //    }
            //});

        });

        $("#btnSuddbmit").click(function (e) {
            e.preventDefault();
            var _this = $(this);
            var _form = _this.closest("#addQuotationlistPurQuo");

            var validator = $("#addQuotationlistPurQuo").validate(); // obtain validator
            var anyError = false;
            _form.find("input").each(function () {
                debugger;
                if (this.parentNode.parentNode.className != "jAutochecklist_list" || this.type != "hidden") {
                    if (!validator.element(this)) { // validate every input element inside this step
                        anyError = true;
                    }
                }
            });

            _form.find("select").each(function () {
                debugger;
                if (!validator.element(this)) { // validate every input element inside this step
                    anyError = true;
                }
            });

            if (anyError) {
                return false;
            }
            else {
                return true; //$('#createtabs a[href = #addQuotationlist]').tab('show');
            }// exit if any error found
        });

    });
</script>

<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add Purchase Order from Purchase Quotation</h4>
        </div>
        <div class="modal-body">
            <div class="form-horizontal">
                <div class="row">
                    <div class="tabs">
                        <ul id="createtabsPurQuo" class="nav nav-tabs tabdrop">
                            <li class="active">
                                <a href="#default1" data-toggle="tab">General</a>
                            </li>
                            <li><a href="#addQuotationlistPurQuo" data-toggle="tab">Product </a></li>

                        </ul>

                        <div id="createtabContent" class="tab-content">

                            <div class="tab-pane fade active in" id="default1">
                                <div class="row">
                                    <div class="col-md-6">
                                        @Html.HiddenFor(model => model.PurchaseOrder.Purchase_Quote_Id)
                                        <div class="form-horizontal">
                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Purchase QuotationID
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Purchase_Quote_Id, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Purchase_Quote_Id)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Vendor Name
                                                </div>
                                                <div class="col-md-8">
                                                    @*@Html.TextBoxFor(model => model.PurchaseOrder.Vendor, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseOrder.Vendor)*@
                                                    @Html.DropDownListFor(m => m.PurchaseQuotation.Vendor_Code, new SelectList(Model.BusinessPartnerList.AsEnumerable(), "BP_Id", "BP_Name"), "", new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Vendor_Code)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Reference Number
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Reference_Number, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Reference_Number)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Order Status
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.DropDownListFor(model => model.PurchaseQuotation.Quotation_Status, new List<SelectListItem>
                                                         {
                                                            new SelectListItem{ Text="Open", Value = "Open" },
                                                            new SelectListItem{ Text="Closed", Value = "Closed" },
                                                            new SelectListItem{ Text="Cancel", Value = "Cancel" }
                                                         }, "Open", new { @class = "form-control", @disabled = true })

                                                    @*@Html.TextBoxFor(m => m.PurchaseQuotation.Quotation_Status, new { @class = "form-control", @readonly = true })*@
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Posting Date
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Posting_Date, new { @Value = DateTime.Now.ToString("MM/dd/yyyy"), @class = "form-control control-text ", @readonly = true })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Posting_Date)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Delivery Date
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Required_Date, new { @class = "form-control control-text datePicker" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Required_Date)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-horizontal">
                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Document Date
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Modified_Date, new { @Value = DateTime.Now.ToString("MM/dd/yyyy"), @class = "form-control control-text ", @readonly = true })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Modified_Date)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Ship To
                                                </div>
                                                <div class="col-md-8">
                                                    @*@Html.TextBoxFor(model => model.PurchaseOrder.Ship_To, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseOrder.Ship_To)*@
                                                    @Html.DropDownListFor(m => m.PurchaseQuotation.Ship_To, new SelectList(Model.BranchList.AsEnumerable(), "Branch_Id", "Branch_Name"), "", new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Ship_To)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Freight
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Freight, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Freight)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Loading
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Loading, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Loading)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Document Discount Amount
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.DocDiscAmt, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.DocDiscAmt)
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    Remarks
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.PurchaseQuotation.Purchase_Quote_Id, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.PurchaseQuotation.Remarks)
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <br />
                                <div class="row">
                                    <div class="modal-footer">
                                        <input class="btn btn-primary pull-left" type="button" id="btnNextTabPurQuo" name="nextButton" value="Next" />
                                        <button class="btn pull-left" data-dismiss="modal">Cancel</button>
                                    </div>
                                </div>
                            </div>

                            <div class="tab-pane fade" id="addQuotationlistPurQuo">

                                <div>

                                    <table id="retPurQuocreateItemTable" class="table display" style="min-height:180px;">
                                        <thead>
                                            <tr>
                                                <th>Product Id</th>
                                                <th>Quantity</th>
                                                <th>Unit Price</th>
                                                <th>Discount %</th>
                                                <th>VAT Code</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (int i = 0; i < 1; i++)
                                            {

                                                <tr>
                                                    <td style="display:none;">
                                                        @Html.HiddenFor(model => model.PurchaseQuotationItemList[i].IsDummy, 0)
                                                    </td>
                                                    <td width="35%">
                                                        @*@Html.TextBoxFor(model => model.PurchaseOrderItemsList[i].Product_id, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseOrderItemsList[i].Product_id)*@
                                                        @Html.DropDownListFor(m => m.PurchaseQuotationItemList[i].Product_id, new SelectList(Model.ProductList.AsEnumerable(), "Product_Id", "Product_Name", Model.PurchaseQuotationItemList[i].Product_id), "", new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseQuotationItemList[i].Product_id)
                                                    </td>
                                                    <td width="10%">
                                                        @Html.TextBoxFor(model => model.PurchaseQuotationItemList[i].Quoted_qty, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseQuotationItemList[i].Quoted_qty)
                                                    </td>
                                                    <td width="13%">
                                                        @Html.TextBoxFor(model => model.PurchaseQuotationItemList[i].Unit_price, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseQuotationItemList[i].Unit_price)
                                                    </td>
                                                    <td width="12%">
                                                        @Html.TextBoxFor(model => model.PurchaseQuotationItemList[i].Discount_percent, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseQuotationItemList[i].Discount_percent)
                                                    </td>
                                                    <td width="15%">
                                                        @*@Html.TextBoxFor(model => model.PurchaseOrderItemsList[i].Vat_Code, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseOrderItemsList[i].Vat_Code)*@
                                                        @Html.DropDownListFor(m => m.PurchaseQuotationItemList[i].Vat_Code, new SelectList(Model.VATList.AsEnumerable(), "VAT_Id", "VAT_percentage", Model.PurchaseQuotationItemList[i].Vat_Code), "", new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseQuotationItemList[i].Vat_Code)
                                                    </td>
                                                    <td style="width: 90px;">
                                                        <input class="RetPQBtnPlus btn pull-left" type="button" value="+" />
                                                    </td>
                                                </tr>

                                            }
                                        </tbody>
                                    </table>

                                </div>

                                <br />
                                <br />
                                <div class="modal-footer">
                                    <input class="btn btn-primary pull-left" type="submit" id="btnSubmit" name="submitButton" value="Save" />
                                    <button class="btn pull-left" data-dismiss="modal">Close</button>

                                    <div class="row" style="float:right;">
                                        Total : <span id="totalPurchase">0</span><br />
                                        Total Before Document Discount : <span id="totalbfdocdisc">@Model.PurchaseQuotation.TotalBefDocDisc</span><br />
                                        Document Discount Amount : <span id="docdisamt">@Model.PurchaseQuotation.DocDiscAmt</span><br />
                                        Tax Amount : <span id="taxamt">@Model.PurchaseQuotation.TaxAmt</span><br />
                                        Total Order Amount : <span id="totalordamt">@Model.PurchaseQuotation.TotalQtnAmt</span><br />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


