@model  Troy.Web.Models.PurchaseReturnViewModels

@Scripts.Render("~/bundles/script/jqueryval")

<script type="text/javascript">
    $(document).ready(function () {

        $('.datepicker').datepicker({ dateFormat: 'dd-mm-yy' }).val();

        $('#creDocumentDate1').datepicker({
            minDate: 0, maxDate: 0
        });

        $('#creDueDate1').datepicker({
            minDate: 0, maxDate: 0
        });

        $('#crePostingDate1').datepicker({
            minDate: 0, maxDate: 0
        });

        $("#editTypeahead").jAutochecklist();
        var i;

        i = $("#ItemCount").val();


        //Dynamically add quotation row
        function addRow() {

            var date = new Date();
            var strDate = (date.getMonth() + 1) + "/" + date.getDate() + "/" + date.getFullYear();

            var selectHtml = CreateSelect(i);
            var selectHtml1 = CreateVATSelect(i);

            selectHtml += '</select>';
            selectHtml1 += '</select>';

            var html = '<tr>' +
                       '<td style="display:none;"> <input class="form-control control-text" data-val="true" data-val-number="The field IsActive must be a number." data-val-required="The IsActive field is required." id="PurchaseReturnitemsList_' + i + '__IsDummy" name="PurchaseReturnitemsList[' + i + '].IsDummy" type="text" value="">  </td>' +
                       '<td width="20%"> ' +
                           selectHtml +
                           '<span class="field-validation-valid" data-valmsg-for="PurchaseReturnitemsList[' + i + '].Product_id" data-valmsg-replace="true"></span>' +
                       '</td>' +
                       //'<td width="15%">' +
                       //    '<input class="form-control control-text datePicker" data-val="true" data-val-date="The field Required Date must be a date." data-val-required="The Required Date field is required." id="PurchaseQuotationItemList_' + i + '__Required_date" name="PurchaseQuotationItemList[' + i + '].Required_date" type="text" value="' + strDate + '">' +
                       //    '<span class="field-validation-valid" data-valmsg-for="goodreceiptitemlist[' + i + '].Required_date" data-valmsg-replace="true"></span>' +
                       //'</td>' +
                       '<td>' +
                           '<input class="form-control control-text" data-val="true" data-val-number="The field Required Quantity must be a number." data-val-required="The Required Quantity field is required." id="PurchaseReturnitemsList_' + i + '__Quantity" name="PurchaseReturnitemsList[' + i + '].Quantity" onkeyup="OnChangeQuantity(this, ' + i + ');" type="text" value="">' +
                           '<span class="field-validation-valid" data-valmsg-for="PurchaseReturnitemsList[' + i + '].Quantity" data-valmsg-replace="true"></span>' +
                       '</td>' +
                       '<td>' +
                           '<input class="form-control control-text" data-val="true" data-val-number="The field Unit_price must be a number." data-val-required="The Unit_price field is required." id="PurchaseReturnitemsList_' + i + '__Unit_price" name="PurchaseReturnitemsList[' + i + '].Unit_price" readonly="True" type="text" value="">' +
                           '<span class="field-validation-valid" data-valmsg-for="PurchaseReturnitemsList[' + i + '].Unit_price" data-valmsg-replace="true"></span>' +
                       '</td>' +
                       '<td>' +
                           '<input class="form-control control-text" data-val="true" data-val-number="The field Discount_percent must be a number." data-val-range="The field Discount% must be between 0 and 100." data-val-range-max="100" data-val-range-min="0"  data-val-required="The Discount_percent field is required." id="PurchaseReturnitemsList_' + i + '__Discount_percent" name="PurchaseReturnitemsList[' + i + '].Discount_percent" onkeyup="OnChangeDiscount(this, ' + i + ');" type="text" value="">' +
                           '<span class="field-validation-valid" data-valmsg-for="PurchaseReturnitemsList[' + i + '].Discount_percent" data-valmsg-replace="true"></span>' +
                       '</td>' +
                       //'<td>' +
                       //    '<input class="form-control control-text valid" data-val="true" data-val-number="The field Amount must be a number." data-val-required="The Amount field is required." id="goodreceiptitemlist_' + i + '__Freight_Loading" name="goodreceiptitemlist[' + i + '].Freight_Loading" readonly="True" type="text" value="">' +
                       //    '<span class="field-validation-valid" data-valmsg-for="goodreceiptitemlist[' + i + '].Freight_Loading" data-valmsg-replace="true"></span>' +
                       //'</td>' +
                       //'<td>' +
                       //    '<input class="form-control control-text" data-val="true" data-val-number="The field VAT Code must be a number." data-val-required="The VAT Code field is required." id="PurchaseReturnitemsList_' + i + '__Vat_Code" name="PurchaseReturnitemsList[' + i + '].Vat_Code" type="text" value="">' +
                       //    '<span class="field-validation-valid" data-valmsg-for="PurchaseReturnitemsList[' + i + '].Vat_Code" data-valmsg-replace="true"></span>' +
                       //'</td>' +
                        '<td width="12%">' +
                             selectHtml1 +
                            '<span class="field-validation-valid" data-valmsg-for="PurchaseReturnitemsList_[' + i + '].__Vat_Code" data-valmsg-replace="true"></span>' +
                        '</td>' +
                        '<td>' +
                           '<input class="form-control control-text valid" data-val="true" data-val-number="The field Amount must be a number." data-val-required="The Amount field is required." id="PurchaseReturnitemsList_' + i + '__LineTotal" name="PurchaseReturnitemsList[' + i + '].LineTotal" readonly="True" type="text" value="">' +
                           '<span class="field-validation-valid" data-valmsg-for="PurchaseReturnitemsList[' + i + '].LineTotal" data-valmsg-replace="true"></span>' +
                       '</td>' +
                       '<td>' +
                           '<input type="button" class="BtnPlus btn pull-left" value="+" /> <input style="margin-left:5px;" type="button" class="BtnMinus btn pull-left" value="-" />' +
                       '</td>' +

                       @*'<td>@Html.TextBoxFor(model => model.PurchaseQuotationItemList[2].Required_date, new { @class = "form-control control-text datePicker" })</td>' +
                   '<td> <input class="form-control control-text datePicker hasDatepicker" data-val="true" data-val-date="The field Required Date must be a date." data-val-required="The Required Date field is required." id="PurchaseQuotationItemList_0__Required_date" name="PurchaseQuotationItemList[0].Required_date" type="text" value=""> </td>' +*@

                       '</tr>'
            $(html).appendTo($("#EditTable"))

            //$("#PurchaseQuotationItemList_1__Required_date").datepicker("refresh");
            i++;

            //$("form").removeData("validator");
            $("form").removeData("unobtrusiveValidation");
            $.validator.unobtrusive.parse("form");

            $("#EditTable").delegate(".datePicker", "focusin", function () {
                $(this).datepicker();
            });
        };
        function CreateSelect(rowID) {

            //debugger;

            var selectHtml = '<select class="form-control control-text valid" data-val="true" data-val-number="The field Product_id must be a number." data-val-required="The Product_id field is required." id="PurchaseReturnitemsList_' + rowID + '__Product_id" name="PurchaseReturnitemsList[' + rowID + '].Product_id" onchange="OnChangeProduct(this, ' + rowID + ');">';
            selectHtml += '<option value=""></option>';

            var dataUrl = "../PurchaseReturn/GetProductList";

            $.ajax({
                type: 'GET',
                url: dataUrl,
                async: false,
                cache: false,
                crossDomain: true,
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                error: function (xhr, err) {
                },
                success: function (result, status) {
                    //debugger;
                    for (var count = 0; count < result.length; count++) {
                        selectHtml += '<option value="' + result[count].Product_Id + '">' + result[count].Product_Name + '</option>';
                    }
                }
            });

            return selectHtml;
        }

        function CreateVATSelect(rowID) {
            var selectHtml1 = '<select class="form-control control-text valid" data-val="true" data-val-number="The field VAT_Id must be a number." data-val-required="The VAT_Id field is required." id="PurchaseReturnitemsList_' + rowID + '__Vat_Code" name="PurchaseReturnitemsList[' + rowID + '].Vat_Code" onchange="OnChangeVAT();" >';
            selectHtml1 += '<option value=""></option>';


            var dataUrl = "../PurchaseReturn/GetVATList";

            $.ajax({
                type: 'GET',
                url: dataUrl,
                async: false,
                cache: false,
                crossDomain: true,
                contentType: "application/json; charset=utf-8",
                dataType: 'json',
                error: function (xhr, err) {
                },
                success: function (result, status) {
                    //debugger;
                    for (var count = 0; count < result.length; count++) {
                        selectHtml1 += '<option value="' + result[count].VAT_percentage + '">' + result[count].VAT_percentage + '</option>';
                    }
                }
            });

            return selectHtml1;
        }

        $("#EditTable").on("click", ".BtnPlus", addRow)

        function deleteRow() {

            //debugger;

            if (i == 1) {
                alert("Atleast one item for each product");
            }
            else {

                var par = $(this).parent().parent();
                //par.remove();
                //$('#idEstablishmentRow td.ms-formbody span input').attr('id');

                var id = par[0].childNodes[0].childNodes[1].id;

                id = '#' + id;

                $(id).val("1");

                //par[0].childNodes[0].childNodes[1].value = 1;

                //$(id).val(1);
                par.remove();
                i--;
                CalculateTotal();
            }
        };
        $("#EditTable").on("click", ".BtnMinus", deleteRow);

    });

    $(function () {
        $("#btnNextTab1").click(function (e) {
            e.preventDefault();
            var _this = $(this);
            var _form = _this.closest("#editdefault");

            var validator = $("#editdefault").validate(); // obtain validator
            var anyError = false;
            _form.find("input").each(function () {
                debugger;
                if (this.parentNode.parentNode.className != "jAutochecklist_list") {
                    if (!validator.element(this)) { // validate every input element inside this step
                        anyError = true;
                    }
                }
            });
            _form.find("select").each(function () {
                // debugger;

                if (!validator.element(this)) { // validate every input element inside this step
                    anyError = true;
                }
            });

            if (anyError) {
                return false;
            }
            else {
                $('#edittabs a[href = #editQuotationlist]').tab('show');
            }// exit if any error found

        });

    });
</script>



@using (Html.BeginForm("Index", "PurchaseReturns"))
{
    @Html.ValidationSummary(true)
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Edit Purchase Return</h4>
            </div>
            <div class="modal-body">
                <div class="form-horizontal">
                    <div class="row">
                        <div class="tabs">
                            <ul id="edittabs" class="nav nav-tabs tabdrop">
                                <li class="active">
                                    <a href="#editdefault" data-toggle="tab">General</a>
                                </li>
                                <li><a href="#editQuotationlist" data-toggle="tab">Product </a></li>

                            </ul>

                            @Html.HiddenFor(model => model.PurchaseReturn.Purchase_Return_Id)

                            @Html.Hidden("ItemCount", Model.PurchaseReturnitemsList.Count)
                            @Html.HiddenFor(model => model.PurchaseReturn.Created_Date)
                            @Html.HiddenFor(model => model.PurchaseReturn.Created_Branc_Id)
                            @Html.HiddenFor(model => model.PurchaseReturn.Created_User_Id)


                            <div id="edittabContent" class="tab-content">

                                <div class="tab-pane fade active in" id="editdefault">
                                    <div class="row">
                                        <div class="col-md-6">
                                            @*@Html.HiddenFor(model => model.PurchaseOrder.Purchase_Quote_Id)*@
                                            <div class="form-horizontal">

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Purchase Return ID
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.PurchaseReturn.Purchase_Return_Id, new { @class = "form-control control-text", @readonly = true })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Purchase_Return_Id)
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Vendor Name
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.DropDownListFor(m => m.PurchaseReturn.Vendor, new SelectList(Model.BusinessPartnerList.AsEnumerable(), "BP_Id", "BP_Name"), "", new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Vendor)
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Reference Number
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.PurchaseReturn.Reference_Number, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Reference_Number)
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Doc Status
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.DropDownListFor(model => model.PurchaseReturn.Doc_Status, new List<SelectListItem>
                                                         {
                                                            new SelectListItem{ Text="Open", Value = "Open" },

                                                         }, new { @class = "form-control", @disabled = true })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Doc_Status)
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Posting Date
                                                    </div>
                                                    <div class="col-md-8">

                                                        @Html.TextBoxFor(model => model.PurchaseReturn.Posting_Date, new { @Value = Model.PurchaseReturn.Posting_Date.ToString("MM/dd/yyyy"), @class = "form-control control-text", @id = "crePostingDate1" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Posting_Date)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-horizontal">
                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Due Date
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.PurchaseReturn.Due_Date, new { @Value = Model.PurchaseReturn.Due_Date.ToString("MM/dd/yyyy"), @class = "form-control control-text", @id = "creDueDate1" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Due_Date)
                                                    </div>
                                                </div>

                                                @*<div class="row form-group">
                                                        <div class="col-md-4">
                                                            Document Date
                                                        </div>
                                                        <div class="col-md-8">

                                                            @Html.TextBoxFor(model => model.PurchaseReturn.Document_Date, new { @class = "form-control control-text", @id = "creDocumentDate1" })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturn.Document_Date)
                                                        </div>
                                                    </div>*@

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Ship To
                                                    </div>
                                                    <div class="col-md-8">

                                                        @Html.DropDownListFor(m => m.PurchaseReturn.Ship_To, new SelectList(Model.BranchList.AsEnumerable(), "Branch_Id", "Branch_Name"), "", new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Ship_To)
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Freight
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.PurchaseReturn.Freight, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Freight)
                                                    </div>
                                                </div>

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Loading
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.PurchaseReturn.Loading, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Loading)
                                                    </div>
                                                </div>

                                                @*<div class="row form-group">
                                                        <div class="col-md-4">
                                                            Document Discount Amount
                                                        </div>
                                                        <div class="col-md-8">
                                                            @Html.TextBoxFor(model => model.PurchaseReturn.DocDiscAmt, new { @class = "form-control control-text" })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturn.DocDiscAmt)
                                                        </div>
                                                    </div>*@

                                                <div class="row form-group">
                                                    <div class="col-md-4">
                                                        Remarks
                                                    </div>
                                                    <div class="col-md-8">
                                                        @Html.TextBoxFor(model => model.PurchaseReturn.Remarks, new { @class = "form-control control-text" })
                                                        @Html.ValidationMessageFor(model => model.PurchaseReturn.Remarks)
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="modal-footer">
                                            <input class="btn btn-primary pull-left" type="button" id="btnNextTab1" name="nextButton" value="Next" />
                                            @*<button class="btn pull-left" data-dismiss="modal">Cancel</button>*@
                                        </div>
                                    </div>
                                </div>

                                <div class="tab-pane fade" id="editQuotationlist">

                                    <div>

                                        <table id="EditTable" class="table display" style="min-height:180px;">
                                            <thead>
                                                <tr>
                                                    <th>Product Id</th>
                                                    <th>Quantity</th>
                                                    <th>Unit Price</th>
                                                    <th>Discount %</th>
                                                    <th>VAT Code</th>
                                                    <th>LineTotal</th>
                                                    <th></th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @for (int i = 0; i < Model.PurchaseReturnitemsList.Count; i++)
                                                {
                                                    @Html.HiddenFor(model => model.PurchaseReturnitemsList[i].Purchase_Return_Id)
                                                    @Html.HiddenFor(model => model.PurchaseReturnitemsList[i].Purchase_ReturnItem_Id)
                                                    @Html.HiddenFor(model => model.PurchaseReturnitemsList[i].Product_id)
                                                    @Html.HiddenFor(model => model.PurchaseReturnitemsList[i].BaseDocLink)

                                                    <tr>
                                                        <td style="display:none;">
                                                            @Html.HiddenFor(model => model.PurchaseReturnitemsList[i].IsDummy, 0)
                                                        </td>
                                                        <td width="30%">
                                                            @*@Html.TextBoxFor(model => model.PurchaseOrderItemsList[i].Product_id, new { @class = "form-control control-text" })
                                                                @Html.ValidationMessageFor(model => model.PurchaseOrderItemsList[i].Product_id)*@
                                                            @Html.DropDownListFor(m => m.PurchaseReturnitemsList[i].Product_id, new SelectList(Model.ProductList.AsEnumerable(), "Product_Id", "Product_Name", Model.PurchaseReturnitemsList[i].Product_id), "", new { @class = "form-control control-text", @onchange = "OnChangeProduct(this, " + i + ");" })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturnitemsList[i].Product_id)
                                                        </td>
                                                        <td width="9%">
                                                            @Html.TextBoxFor(model => model.PurchaseReturnitemsList[i].Quantity, new { @class = "form-control control-text", @onkeyup = "OnChangeQuantity(this, " + i + ");" })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturnitemsList[i].Quantity)
                                                        </td>
                                                        <td width="10%">
                                                            @Html.TextBoxFor(model => model.PurchaseReturnitemsList[i].Unit_price, new { @class = "form-control control-text", @readonly = true })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturnitemsList[i].Unit_price)
                                                        </td>
                                                        <td width="8%">
                                                            @Html.TextBoxFor(model => model.PurchaseReturnitemsList[i].Discount_percent, new { @class = "form-control control-text", @onkeyup = "OnChangeDiscount(this, " + i + ");" })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturnitemsList[i].Discount_percent)
                                                        </td>
                                                        <td width="11%">
                                                            @*@Html.TextBoxFor(model => model.PurchaseOrderItemsList[i].Vat_Code, new { @class = "form-control control-text" })
                                                                @Html.ValidationMessageFor(model => model.PurchaseOrderItemsList[i].Vat_Code)*@
                                                            @Html.DropDownListFor(m => m.PurchaseReturnitemsList[i].Vat_Code, new SelectList(Model.VATList.AsEnumerable(), "VAT_percentage", "VAT_percentage", Model.PurchaseReturnitemsList[i].Vat_Code), "", new { @class = "form-control control-text", @onchange = "OnChangeVAT(this, " + i + ");" })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturnitemsList[i].Vat_Code)
                                                        </td>
                                                        <td width="12%">
                                                            @Html.TextBoxFor(model => model.PurchaseReturnitemsList[i].LineTotal, new { @class = "form-control control-text", @readonly = true })
                                                            @Html.ValidationMessageFor(model => model.PurchaseReturnitemsList[i].LineTotal)
                                                        </td>
                                                        <td style="width: 90px;">
                                                            <input class="BtnPlus btn pull-left" type="button" value="+" disabled="disabled" />
                                                            @*@if (i > 0)
                                                                {
                                                                    <input style="margin-left:5px;" class="BtnMinus btn pull-left" type="button" value="-" />
                                                                }*@
                                                        </td>
                                                    </tr>

                                                }
                                            </tbody>
                                        </table>

                                    </div>

                                    <br />
                                    <br />
                                    <div class="modal-footer">
                                        <input class="btn btn-primary pull-left" type="Submit" id="btnEditSubmit" name="submitButton" value="Update" />
                                        <button class="btn pull-left" data-dismiss="modal">Close</button>

                                        <div class="row" style="float:right;">
                                            @*Total : <span id="totalPurchase">0</span><br />
                                                Total Before Document Discount : <span id="totalbfdocdisc">0</span><br />
                                                Document Discount Amount : <span id="docdisamt">0</span><br />
                                                Tax Amount : <span id="taxamt">0</span><br />
                                                Total Order Amount : <span id="totalordamt">0</span><br />*@

                                            Total : <span>@Html.TextBoxFor(m => m.PurchaseReturn.TotalBefDocDisc, new { id = "totalPurchase1", @class = "input-small", @readonly = true, @style = "border: none;" })</span> <br />
                                            Discount Amount : <span>@Html.TextBoxFor(m => m.PurchaseReturn.DocDiscAmt, new { id = "totalDiscount1", @class = "input-small", @onkeyup = "OnChangeDiscountSummary(this);" }) @Html.ValidationMessageFor(model => model.PurchaseReturn.DocDiscAmt) </span> <br />
                                            Tax Amount : <span>@Html.TextBoxFor(m => m.PurchaseReturn.TaxAmt, new { id = "totalTax1", @class = "input-small", @readonly = true, @style = "border: none;" })</span> <br />
                                            Total Quotation Amount : <span>@Html.TextBoxFor(m => m.PurchaseReturn.TotalPurRtnAmt, new { id = "totalQuotationAmt1", @class = "input-small", @readonly = true, @style = "border: none;" })</span> <br />
                                        </div>

                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


