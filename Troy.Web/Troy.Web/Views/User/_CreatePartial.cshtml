@model Troy.Web.Models.UserViewModels


<div class="modal-dialog modal-lg">
    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
            <h4 class="modal-title" id="myModalLabel">Add User</h4>
        </div>

        <div class="modal-body">
            <div class="form-horizontal">
                <div class="row">
                    <div class="tabs">
                        <ul id="myTab" class="nav nav-tabs tabdrop">
                            <li class="active">
                                <a href="#default" data-toggle="tab">General</a>
                            </li>
                        </ul>
                        <div id="myTabContent" class="tab-content">
                            <div class="tab-pane fade active in" id="default">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-horizontal">
                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    @Html.LabelFor(m => m.UserName, new { @class = "control-label normal" })
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.UserName, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                                </div>

                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    @Html.LabelFor(m => m.Password, new { @class = "control-label normal" })
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.PasswordFor(model => model.Password, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    @Html.LabelFor(m => m.ConfirmPassword, new { @class = "control-label normal" })
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control control-text  pull-left" })
                                                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    @Html.LabelFor(m => m.Email, new { @class = "control-label normal" })
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control control-text" })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>

                                            <div class="row form-group">
                                                <div class="col-md-4">
                                                    @Html.LabelFor(m => m.IsActive, new { @class = "control-label normal" })
                                                </div>
                                                <div class="col-md-8">
                                                    @Html.CheckBoxFor(model => model.IsActive, new {  name = "IsActive",@checked="checked", @class = "" })
                                                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="row form-group">
                                            <div class="col-md-4">
                                                @Html.LabelFor(m => m.Role_Id, new { @class = "control-label normal" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.Role_Id, new SelectList(Model.rolelist.AsEnumerable(), "Id", "Name"), "", new { @class = "form-control control-text" })
                                                @Html.ValidationMessageFor(model => model.Role_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row form-group">
                                            <div class="col-md-4">
                                                @Html.LabelFor(m => m.Employee_Id, new { @class = "control-label normal" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.Employee_Id, new SelectList(Model.employeelist.AsEnumerable(), "Emp_Id", "First_Name"), "", new { @class = "form-control control-text" })
                                                @Html.ValidationMessageFor(model => model.Employee_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="row form-group">
                                            <div class="col-md-4">
                                                @Html.LabelFor(m => m.Branch_Id, new { @class = "control-label normal" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.Branch_Id, new SelectList(Model.branchlist.AsEnumerable(), "Branch_Id", "Branch_Name"), "", new { @class = "form-control control-text" })
                                                @Html.ValidationMessageFor(model => model.Branch_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="row form-group">
                                            <div class="col-md-4">

                                                @Html.Label("Default branch", new { @class = "control-label normal  pull-left" })
                                            </div>
                                            <div class="col-md-8">
                                                @Html.DropDownListFor(m => m.Branch_Id, new SelectList(Model.branchlist.AsEnumerable(), "Branch_Id", "Branch_Name"), "", new { @class = "form-control control-text" })
                                                @Html.ValidationMessageFor(model => model.Branch_Id, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="modal-footer">
            <input class="btn btn-primary" type="submit" id="btnSubmit" name="submitButton" value="Save" />
            <button class="btn btn-default pull-right" data-dismiss="modal">Close</button>
        </div>
    </div>
</div>